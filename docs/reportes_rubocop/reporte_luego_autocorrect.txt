Inspecting 46 files
CCCCCCCWWWCCCCCCCCCCCCCWCCCCCCCCCCCCCCCCCCWCWC

Offenses:

Gemfile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
ruby '2.7.5'
^
Gemfile:25:1: C: Bundler/DuplicatedGem: Gem prawn requirements already given on line 24 of the Gemfile.
gem 'prawn'
^^^^^^^^^^^
Rakefile.rb:1:1: C: Naming/FileName: The name of this source file (Rakefile.rb) should use snake_case.
require 'sinatra/activerecord/rake'
^
Rakefile.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'sinatra/activerecord/rake'
^
app/helpers/admin_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Module for admin helper
^
app/helpers/admin_helper.rb:4:7: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
  def get_menu_admin
      ^^^^^^^^^^^^^^
app/helpers/admin_helper.rb:5:39: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :"/admin/admin_menu", layout: :layout_2
                                      ^^^^^^^^^
app/helpers/export_pdf_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module ExportPdfHelper.
module ExportPdfHelper
^^^^^^^^^^^^^^^^^^^^^^
app/helpers/export_pdf_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ExportPdfHelper
^
app/helpers/export_pdf_helper.rb:2:3: C: Style/Documentation: Missing top-level documentation comment for class ExportPdfHelper::StructuredPdf.
  class StructuredPdf
  ^^^^^^^^^^^^^^^^^^^
app/helpers/export_pdf_helper.rb:11:3: C: Metrics/MethodLength: Method has too many lines. [11/10]
  def points_table_data(id_tournament) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/export_pdf_helper.rb:18:5: C: [Correctable] Style/For: Prefer each over for.
    for p in points do ...
    ^^^^^^^^^^^^^^^^^^
app/helpers/export_pdf_helper.rb:25:35: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
    StructuredPdf.new(data_table, 'Puntaje ' + name_tournament)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/export_pdf_helper.rb:28:3: C: Metrics/AbcSize: Assignment Branch Condition size for create_pdf is too high. [<9, 46, 4> 47.04/17]
  def create_pdf(data) ...
  ^^^^^^^^^^^^^^^^^^^^
app/helpers/export_pdf_helper.rb:28:3: C: Metrics/MethodLength: Method has too many lines. [31/10]
  def create_pdf(data) ...
  ^^^^^^^^^^^^^^^^^^^^
app/helpers/export_pdf_helper.rb:46:121: C: Layout/LineLength: Line is too long. [166/120]
                          cell_style: { size: 10, font: 'Helvetica', font_style: :bold, border_color: '3aa17a', padding: 12, align: :center, inline_format: true }) do
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/export_pdf_helper.rb:47:7: C: [Correctable] Style/For: Prefer each over for.
      for i in 0..data.table.length - 1 ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/export_pdf_helper.rb:48:12: C: [Correctable] Style/NumericPredicate: Use i.zero? instead of i == 0.
        if i == 0
           ^^^^^^
app/helpers/forecast_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Module ForecastHelper .. .
^
app/helpers/forecast_helper.rb:3:3: C: Metrics/AbcSize: Assignment Branch Condition size for post_forecast is too high. [<7, 36, 2> 36.73/17]
  def post_forecast ...
  ^^^^^^^^^^^^^^^^^
app/helpers/forecast_helper.rb:3:3: C: Metrics/MethodLength: Method has too many lines. [13/10]
  def post_forecast ...
  ^^^^^^^^^^^^^^^^^
app/helpers/forecast_helper.rb:17:14: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
    redirect '/play?id_match_day=' + forecast.match.match_day_id.to_s + '&id_tournament=' + forecast.match.match_day.tournament_id.to_s
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/forecast_helper.rb:17:121: C: Layout/LineLength: Line is too long. [135/120]
    redirect '/play?id_match_day=' + forecast.match.match_day_id.to_s + '&id_tournament=' + forecast.match.match_day.tournament_id.to_s
                                                                                                                        ^^^^^^^^^^^^^^^
app/helpers/forecast_helper.rb:20:7: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
  def get_forecasts
      ^^^^^^^^^^^^^
app/helpers/forecast_helper.rb:22:41: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :"forecasts/forecasts", layout: :layout_2
                                        ^^^^^^^^^
app/helpers/game_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module GameHelperModule.
module GameHelperModule
^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/game_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module GameHelperModule
^
app/helpers/game_helper.rb:5:24: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :home, layout: :layout_2
                       ^^^^^^^^^
app/helpers/game_helper.rb:21:31: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :"play/play", layout: :layout_2
                              ^^^^^^^^^
app/helpers/game_helper.rb:33:35: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :"points/points", layout: :layout_2
                                  ^^^^^^^^^
app/helpers/match_day_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module MatchDayHelper.
module MatchDayHelper
^^^^^^^^^^^^^^^^^^^^^
app/helpers/match_day_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module MatchDayHelper
^
app/helpers/match_day_helper.rb:7:42: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :"admin/new_match_days", layout: :layout_2
                                         ^^^^^^^^^
app/helpers/match_day_helper.rb:10:3: C: Metrics/AbcSize: Assignment Branch Condition size for post_match_day is too high. [<7, 21, 3> 22.34/17]
  def post_match_day ...
  ^^^^^^^^^^^^^^^^^^
app/helpers/match_day_helper.rb:10:3: C: Metrics/MethodLength: Method has too many lines. [14/10]
  def post_match_day ...
  ^^^^^^^^^^^^^^^^^^
app/helpers/match_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module MatchHelperModule.
module MatchHelperModule
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/match_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module MatchHelperModule
^
app/helpers/match_helper.rb:2:3: C: Metrics/AbcSize: Assignment Branch Condition size for create_match is too high. [<15, 37, 5> 40.24/17]
  def create_match ...
  ^^^^^^^^^^^^^^^^
app/helpers/match_helper.rb:2:3: C: Metrics/MethodLength: Method has too many lines. [20/10]
  def create_match ...
  ^^^^^^^^^^^^^^^^
app/helpers/match_helper.rb:17:5: C: [Correctable] Style/For: Prefer each over for.
    for m in matches do ...
    ^^^^^^^^^^^^^^^^^^^
app/helpers/match_helper.rb:35:3: C: Metrics/AbcSize: Assignment Branch Condition size for update_match is too high. [<8, 38, 5> 39.15/17]
  def update_match ...
  ^^^^^^^^^^^^^^^^
app/helpers/match_helper.rb:35:3: C: Metrics/MethodLength: Method has too many lines. [15/10]
  def update_match ...
  ^^^^^^^^^^^^^^^^
app/helpers/match_helper.rb:42:8: W: Lint/BinaryOperatorWithIdenticalOperands: Binary operator && has identical operands.
    if !match.home_goals.nil? && !match.home_goals.nil? && !match.consistentResult
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/match_helper.rb:44:16: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
      redirect 'matches/update?match_id=' + params[:match_id]
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/match_helper.rb:52:14: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
    redirect 'matches/update?match_id=' + params[:match_id]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/match_helper.rb:55:3: C: Metrics/AbcSize: Assignment Branch Condition size for matches is too high. [<7, 18, 2> 19.42/17]
  def matches ...
  ^^^^^^^^^^^
app/helpers/match_helper.rb:55:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def matches ...
  ^^^^^^^^^^^
app/helpers/match_helper.rb:70:38: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :"admin/crud_match", layout: :layout_2
                                     ^^^^^^^^^
app/helpers/match_helper.rb:85:41: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :'/admin/update_match', layout: :layout_2
                                        ^^^^^^^^^
app/helpers/session_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'mail'
^
app/helpers/session_helper.rb:2:1: C: Metrics/ModuleLength: Module has too many lines. [158/100]
module SessionHelper ...
^^^^^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:2:1: C: Style/Documentation: Missing top-level documentation comment for module SessionHelper.
module SessionHelper
^^^^^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:18:3: C: Metrics/AbcSize: Assignment Branch Condition size for new_authentication is too high. [<9, 39, 4> 40.22/17]
  def new_authentication ...
  ^^^^^^^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:18:3: C: Metrics/MethodLength: Method has too many lines. [23/10]
  def new_authentication ...
  ^^^^^^^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:39:7: C: Naming/VariableName: Use snake_case for variable names.
      mailUser = player.email
      ^^^^^^^^
app/helpers/session_helper.rb:40:34: C: Naming/VariableName: Use snake_case for variable names.
      register_email_successfull(mailUser, player.name)
                                 ^^^^^^^^
app/helpers/session_helper.rb:51:8: C: [Correctable] Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    if player && player.authenticate(params[:password])
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:62:37: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :"players/profile", layout: :layout_2
                                    ^^^^^^^^^
app/helpers/session_helper.rb:65:3: C: Metrics/AbcSize: Assignment Branch Condition size for update_player is too high. [<6, 27, 5> 28.11/17]
  def update_player ...
  ^^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:65:3: C: Metrics/MethodLength: Method has too many lines. [16/10]
  def update_player ...
  ^^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:78:7: C: [Correctable] Style/IdenticalConditionalBranches: Move redirect '/profile' out of the conditional.
      redirect '/profile'
      ^^^^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:81:7: C: [Correctable] Style/IdenticalConditionalBranches: Move redirect '/profile' out of the conditional.
      redirect '/profile'
      ^^^^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:89:3: C: Metrics/AbcSize: Assignment Branch Condition size for pw_new is too high. [<4, 19, 2> 19.52/17]
  def pw_new ...
  ^^^^^^^^^^
app/helpers/session_helper.rb:89:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def pw_new ...
  ^^^^^^^^^^
app/helpers/session_helper.rb:104:3: C: Metrics/AbcSize: Assignment Branch Condition size for pw_lost_post is too high. [<10, 32, 3> 33.66/17]
  def pw_lost_post ...
  ^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:104:3: C: Metrics/MethodLength: Method has too many lines. [20/10]
  def pw_lost_post ...
  ^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:116:7: C: Naming/VariableName: Use snake_case for variable names.
      mailSplitAfter3 = player.email.split('@')
      ^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:118:7: C: Naming/VariableName: Use snake_case for variable names.
      mailSplitBefore3 = mailSplitAfter3[0].slice(0, 3)
      ^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:118:26: C: Naming/VariableName: Use snake_case for variable names.
      mailSplitBefore3 = mailSplitAfter3[0].slice(0, 3)
                         ^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:121:9: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
        'Por favor revise su correo electrónico: ' + mailSplitBefore3 + '@****.com para un enlace de recuperación de contraseña'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:121:54: C: Naming/VariableName: Use snake_case for variable names.
        'Por favor revise su correo electrónico: ' + mailSplitBefore3 + '@****.com para un enlace de recuperación de contraseña'
                                                     ^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:121:121: C: Layout/LineLength: Line is too long. [128/120]
        'Por favor revise su correo electrónico: ' + mailSplitBefore3 + '@****.com para un enlace de recuperación de contraseña'
                                                                                                                        ^^^^^^^^
app/helpers/session_helper.rb:122:7: C: [Correctable] Style/IdenticalConditionalBranches: Move redirect '/pw-lost' out of the conditional.
      redirect '/pw-lost'
      ^^^^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:125:7: C: [Correctable] Style/IdenticalConditionalBranches: Move redirect '/pw-lost' out of the conditional.
      redirect '/pw-lost'
      ^^^^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:142:27: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.
  def send_email_recovery(mailUser, token, string_token, userName)
                          ^^^^^^^^
app/helpers/session_helper.rb:142:27: C: Naming/VariableName: Use snake_case for variable names.
  def send_email_recovery(mailUser, token, string_token, userName)
                          ^^^^^^^^
app/helpers/session_helper.rb:142:58: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.
  def send_email_recovery(mailUser, token, string_token, userName)
                                                         ^^^^^^^^
app/helpers/session_helper.rb:142:58: C: Naming/VariableName: Use snake_case for variable names.
  def send_email_recovery(mailUser, token, string_token, userName)
                                                         ^^^^^^^^
app/helpers/session_helper.rb:146:18: C: Naming/VariableName: Use snake_case for variable names.
      m.to       mailUser
                 ^^^^^^^^
app/helpers/session_helper.rb:149:99: C: Naming/VariableName: Use snake_case for variable names.
                                                                                                  userName)
                                                                                                  ^^^^^^^^
app/helpers/session_helper.rb:154:34: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.
  def register_email_successfull(mailUser, userName)
                                 ^^^^^^^^
app/helpers/session_helper.rb:154:34: C: Naming/VariableName: Use snake_case for variable names.
  def register_email_successfull(mailUser, userName)
                                 ^^^^^^^^
app/helpers/session_helper.rb:154:44: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.
  def register_email_successfull(mailUser, userName)
                                           ^^^^^^^^
app/helpers/session_helper.rb:154:44: C: Naming/VariableName: Use snake_case for variable names.
  def register_email_successfull(mailUser, userName)
                                           ^^^^^^^^
app/helpers/session_helper.rb:158:12: C: Naming/VariableName: Use snake_case for variable names.
      m.to mailUser
           ^^^^^^^^
app/helpers/session_helper.rb:160:47: C: Naming/VariableName: Use snake_case for variable names.
      m.html_part = template.gsub('{{name}}', userName)
                                              ^^^^^^^^
app/helpers/session_helper.rb:165:7: C: Naming/MethodName: Use snake_case for method names.
  def generateRandomPassword(length)
      ^^^^^^^^^^^^^^^^^^^^^^
app/helpers/session_helper.rb:166:38: C: [Correctable] Style/SymbolProc: Pass &:to_a as an argument to map instead of a block.
    o = [('a'..'z'), ('A'..'Z')].map { |i| i.to_a }.flatten
                                     ^^^^^^^^^^^^^^
app/helpers/session_helper.rb:170:32: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.
  def email_update_successfull(mailUser, userName)
                               ^^^^^^^^
app/helpers/session_helper.rb:170:32: C: Naming/VariableName: Use snake_case for variable names.
  def email_update_successfull(mailUser, userName)
                               ^^^^^^^^
app/helpers/session_helper.rb:170:42: C: Naming/MethodParameterName: Only use lowercase characters for method parameter.
  def email_update_successfull(mailUser, userName)
                                         ^^^^^^^^
app/helpers/session_helper.rb:170:42: C: Naming/VariableName: Use snake_case for variable names.
  def email_update_successfull(mailUser, userName)
                                         ^^^^^^^^
app/helpers/session_helper.rb:172:5: W: Lint/UselessAssignment: Useless assignment to variable - mail.
    mail = Mail.new do |m|
    ^^^^
app/helpers/session_helper.rb:174:17: C: Naming/VariableName: Use snake_case for variable names.
      m.to      mailUser
                ^^^^^^^^
app/helpers/session_helper.rb:176:47: C: Naming/VariableName: Use snake_case for variable names.
      m.html_part = template.gsub('{{name}}', userName)
                                              ^^^^^^^^
app/helpers/statistics_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module StatisticsHelper.
module StatisticsHelper
^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/statistics_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module StatisticsHelper
^
app/helpers/statistics_helper.rb:2:3: C: Metrics/AbcSize: Assignment Branch Condition size for get_statistics is too high. [<19, 27, 10> 34.5/17]
  def get_statistics ...
  ^^^^^^^^^^^^^^^^^^
app/helpers/statistics_helper.rb:2:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for get_statistics is too high. [8/7]
  def get_statistics ...
  ^^^^^^^^^^^^^^^^^^
app/helpers/statistics_helper.rb:2:3: C: Metrics/MethodLength: Method has too many lines. [31/10]
  def get_statistics ...
  ^^^^^^^^^^^^^^^^^^
app/helpers/statistics_helper.rb:2:3: C: Metrics/PerceivedComplexity: Perceived complexity for get_statistics is too high. [10/8]
  def get_statistics ...
  ^^^^^^^^^^^^^^^^^^
app/helpers/statistics_helper.rb:2:7: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
  def get_statistics
      ^^^^^^^^^^^^^^
app/helpers/statistics_helper.rb:5:5: W: Lint/UselessAssignment: Useless assignment to variable - forecast. Did you mean forecasts?
    forecast = nil
    ^^^^^^^^
app/helpers/statistics_helper.rb:23:26: W: Lint/ShadowingOuterLocalVariable: Shadowing outer local variable - forecast.
      forecasts.each do |forecast|
                         ^^^^^^^^
app/helpers/statistics_helper.rb:37:23: C: [Correctable] Style/FloatDivision: Prefer using .to_f on one side only.
      @efectivity = ((@points.to_f / @total_points.to_f) * 100).round(2)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/statistics_helper.rb:40:43: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :"statistics/statistics", layout: :layout_2
                                          ^^^^^^^^^
app/helpers/team_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module TeamHelper.
module TeamHelper
^^^^^^^^^^^^^^^^^
app/helpers/team_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module TeamHelper
^
app/helpers/team_helper.rb:5:33: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :"admin/teams", layout: :layout_2
                                ^^^^^^^^^
app/helpers/team_helper.rb:8:3: C: Metrics/AbcSize: Assignment Branch Condition size for create_team is too high. [<6, 20, 4> 21.26/17]
  def create_team ...
  ^^^^^^^^^^^^^^^
app/helpers/team_helper.rb:8:3: C: Metrics/MethodLength: Method has too many lines. [15/10]
  def create_team ...
  ^^^^^^^^^^^^^^^
app/helpers/team_helper.rb:55:30: C: [Correctable] Style/InverseMethods: Use reject instead of inverting select.
    @tournaments_to_choice = tournaments.select { |t| !@team.tournaments.include?(t) }
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/team_helper.rb:56:39: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :'admin/update_team', layout: :layout_2
                                      ^^^^^^^^^
app/helpers/tournament_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module TournamentHelper.
module TournamentHelper
^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/tournament_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module TournamentHelper
^
app/helpers/tournament_helper.rb:4:39: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :"admin/tournaments", layout: :layout_2
                                      ^^^^^^^^^
app/helpers/tournament_helper.rb:9:45: C: Naming/VariableNumber: Use normalcase for symbol numbers.
    erb :"admin/tournament_update", layout: :layout_2
                                            ^^^^^^^^^
app/helpers/tournament_helper.rb:12:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def create_tournament(name_tournament) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/tournament_helper.rb:39:3: C: Metrics/AbcSize: Assignment Branch Condition size for update_tournament is too high. [<6, 17, 2> 18.14/17]
  def update_tournament ...
  ^^^^^^^^^^^^^^^^^^^^^
app/helpers/tournament_helper.rb:39:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def update_tournament ...
  ^^^^^^^^^^^^^^^^^^^^^
app/helpers/tournament_helper.rb:57:14: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
    redirect '/tournaments/update/' + id_tournament
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Admin < ActiveRecord::Base
^
app/models/date.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Date < ActiveRecord::Base
^
app/models/forecast.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class Forecast.
class Forecast < ActiveRecord::Base
^^^^^^^^^^^^^^
app/models/forecast.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Forecast < ActiveRecord::Base
^
app/models/forecast.rb:35:5: C: Style/GuardClause: Use a guard clause (return if Point.exists?(tournament: tournament, player: player)) instead of wrapping the code inside a conditional expression.
    unless Point.exists?(tournament: tournament, player: player)
    ^^^^^^
app/models/forecast.rb:50:3: C: Metrics/AbcSize: Assignment Branch Condition size for consistentResult is too high. [<0, 17, 24> 29.41/17]
  def consistentResult ...
  ^^^^^^^^^^^^^^^^^^^^
app/models/forecast.rb:50:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for consistentResult is too high. [12/7]
  def consistentResult ...
  ^^^^^^^^^^^^^^^^^^^^
app/models/forecast.rb:50:3: C: Metrics/MethodLength: Method has too many lines. [17/10]
  def consistentResult ...
  ^^^^^^^^^^^^^^^^^^^^
app/models/forecast.rb:50:3: C: Metrics/PerceivedComplexity: Perceived complexity for consistentResult is too high. [14/8]
  def consistentResult ...
  ^^^^^^^^^^^^^^^^^^^^
app/models/forecast.rb:50:7: C: Naming/MethodName: Use snake_case for method names.
  def consistentResult
      ^^^^^^^^^^^^^^^^
app/models/init.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require_relative 'match_day'
^
app/models/match.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class Match.
class Match < ActiveRecord::Base
^^^^^^^^^^^
app/models/match.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Match < ActiveRecord::Base
^
app/models/match.rb:12:7: C: Naming/PredicateName: Rename has_result? to result?.
  def has_result?
      ^^^^^^^^^^^
app/models/match.rb:38:3: C: Metrics/AbcSize: Assignment Branch Condition size for consistentResult is too high. [<0, 16, 24> 28.84/17]
  def consistentResult ...
  ^^^^^^^^^^^^^^^^^^^^
app/models/match.rb:38:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for consistentResult is too high. [12/7]
  def consistentResult ...
  ^^^^^^^^^^^^^^^^^^^^
app/models/match.rb:38:3: C: Metrics/MethodLength: Method has too many lines. [17/10]
  def consistentResult ...
  ^^^^^^^^^^^^^^^^^^^^
app/models/match.rb:38:3: C: Metrics/PerceivedComplexity: Perceived complexity for consistentResult is too high. [14/8]
  def consistentResult ...
  ^^^^^^^^^^^^^^^^^^^^
app/models/match.rb:38:7: C: Naming/MethodName: Use snake_case for method names.
  def consistentResult
      ^^^^^^^^^^^^^^^^
app/models/match_day.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class MatchDay < ActiveRecord::Base
^
app/models/player.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Player < ActiveRecord::Base
^
app/models/point.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Point < ActiveRecord::Base
^
app/models/pw_recovery.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class PwRecovery < ActiveRecord::Base
^
app/models/pw_recovery.rb:5:5: C: [Correctable] Style/CommentedKeyword: Do not place comments on the same line as the end keyword.
end # class PwRecovery
    ^^^^^^^^^^^^^^^^^^
app/models/team.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Team < ActiveRecord::Base
^
app/models/tournament.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class Tournament.
class Tournament < ActiveRecord::Base
^^^^^^^^^^^^^^^^
app/models/tournament.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Tournament < ActiveRecord::Base
^
app/server.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'mail'
^
app/server.rb:2:1: W: [Correctable] Lint/DuplicateRequire: Duplicate require detected.
require 'mail'
^^^^^^^^^^^^^^
app/server.rb:12:1: W: [Correctable] Lint/DuplicateRequire: Duplicate require detected.
require 'prawn'
^^^^^^^^^^^^^^^
app/server.rb:26:1: C: Metrics/ClassLength: Class has too many lines. [166/100]
class App < Sinatra::Application ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/server.rb:26:1: C: Style/Documentation: Missing top-level documentation comment for class App.
class App < Sinatra::Application
^^^^^^^^^
app/server.rb:40:25: C: [Correctable] Style/GlobalStdStream: Use $stdout instead of STDOUT.
    logger = Logger.new(STDOUT)
                        ^^^^^^
app/server.rb:72:121: C: Layout/LineLength: Line is too long. [123/120]
      admin_pages = ['/teams', '/tournaments', '/matches', '/match_day_create', '/add_tournament', '/gestion', '/add_team',
                                                                                                                        ^^^
app/server.rb:181:34: C: [Correctable] Style/YodaCondition: Reverse the order of the operands :tournament_id == params[:tournament_id].
    @match_days = MatchDay.where(:tournament_id == params[:tournament_id])
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config.ru:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require './app/server'
^
config/environment.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
db_options = YAML.load(File.read('./config/database.yml'))
^
config/environment.rb:1:19: C: [Correctable] Security/YAMLLoad: Prefer using YAML.safe_load over YAML.load.
db_options = YAML.load(File.read('./config/database.yml'))
                  ^^^^
db/migrate/20220512014023_create_teams_tournaments.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateTeamsTournaments.
class CreateTeamsTournaments < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220512014023_create_teams_tournaments.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateTeamsTournaments < ActiveRecord::Migration[7.0]
^
db/migrate/20220512023005_create_match_day_table.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateMatchDayTable.
class CreateMatchDayTable < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220512023005_create_match_day_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateMatchDayTable < ActiveRecord::Migration[7.0]
^
db/migrate/20220512023216_create_players.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreatePlayers.
class CreatePlayers < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^
db/migrate/20220512023216_create_players.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreatePlayers < ActiveRecord::Migration[7.0]
^
db/migrate/20220512023231_create_forecasts.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateForecasts.
class CreateForecasts < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220512023231_create_forecasts.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateForecasts < ActiveRecord::Migration[7.0]
^
db/migrate/20220512023348_create_admins.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateAdmins.
class CreateAdmins < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^
db/migrate/20220512023348_create_admins.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateAdmins < ActiveRecord::Migration[7.0]
^
db/migrate/20220512023702_create_teams_table.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateTeamsTable.
class CreateTeamsTable < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220512023702_create_teams_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateTeamsTable < ActiveRecord::Migration[7.0]
^
db/migrate/20220512023710_create_points.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreatePoints.
class CreatePoints < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^
db/migrate/20220512023710_create_points.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreatePoints < ActiveRecord::Migration[7.0]
^
db/migrate/20220512023746_create_tournaments.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateTournaments.
class CreateTournaments < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220512023746_create_tournaments.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateTournaments < ActiveRecord::Migration[7.0]
^
db/migrate/20220512024122_create_match_table.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateMatchTable.
class CreateMatchTable < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220512024122_create_match_table.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateMatchTable < ActiveRecord::Migration[7.0]
^
db/migrate/20220512024122_create_match_table.rb:2:3: C: Metrics/MethodLength: Method has too many lines. [11/10]
  def change ...
  ^^^^^^^^^^
db/migrate/20220512035603_edit_matches.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class EditMatches.
class EditMatches < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^
db/migrate/20220512035603_edit_matches.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EditMatches < ActiveRecord::Migration[7.0]
^
db/migrate/20220512040508_update_matches.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class UpdateMatches.
class UpdateMatches < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^
db/migrate/20220512040508_update_matches.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UpdateMatches < ActiveRecord::Migration[7.0]
^
db/migrate/20220512040947_update_forecasts.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class UpdateForecasts.
class UpdateForecasts < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220512040947_update_forecasts.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UpdateForecasts < ActiveRecord::Migration[7.0]
^
db/migrate/20220519023747_add_password_digest_to_players.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddPasswordDigestToPlayers.
class AddPasswordDigestToPlayers < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220519023747_add_password_digest_to_players.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddPasswordDigestToPlayers < ActiveRecord::Migration[7.0]
^
db/migrate/20220526000118_update_players.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class UpdatePlayers.
class UpdatePlayers < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^
db/migrate/20220526000118_update_players.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UpdatePlayers < ActiveRecord::Migration[7.0]
^
db/migrate/20220923122617_add_table_pw_recovery.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class AddTablePwRecovery.
class AddTablePwRecovery < ActiveRecord::Migration[7.0]
^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220923122617_add_table_pw_recovery.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddTablePwRecovery < ActiveRecord::Migration[7.0]
^
db/schema.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is auto-generated from the current state of the database. Instead
^
db/schema.rb:13:1: C: Metrics/BlockLength: Block has too many lines. [81/25]
ActiveRecord::Schema[7.0].define(version: 20_220_526_000_118) do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
liga_argentina = Tournament.create(name: 'Liga Argentina')
^
db/seeds.rb:25:1: W: Lint/UselessAssignment: Useless assignment to variable - m2.
m2 = Match.create(home: indep, away: racing, match_day: fecha_1_arg, match_type: 'LEAGUE')
^^
db/seeds.rb:27:1: W: Lint/UselessAssignment: Useless assignment to variable - m3.
m3 = Match.create(home: chelsea, away: liverpool, match_day: fecha_1_premier, match_type: 'LEAGUE')
^^
db/seeds.rb:28:1: W: Lint/UselessAssignment: Useless assignment to variable - m4.
m4 = Match.create(home: arsenal, away: everton, match_day: fecha_1_premier, match_type: 'LEAGUE')
^^
db/seeds.rb:30:1: W: Lint/UselessAssignment: Useless assignment to variable - m5.
m5 = Match.create(home: boca, away: river, match_day: semi_copa_arg, match_type: 'ELIMINATION')
^^
db/seeds.rb:31:1: W: Lint/UselessAssignment: Useless assignment to variable - m6.
m6 = Match.create(home: indep, away: racing, match_day: semi_copa_arg, match_type: 'ELIMINATION')
^^
db/seeds.rb:33:1: W: Lint/UselessAssignment: Useless assignment to variable - p.
p = Player.create(name: 'Mateo', email: 'mateo@correo.com', password: '12345', is_admin: true)
^
db/seeds.rb:34:1: W: Lint/UselessAssignment: Useless assignment to variable - l.
l = Player.create(name: 'Lucio', email: 'lucio@correo.com', password: '12345', is_admin: true)
^
db/seeds.rb:35:1: W: Lint/UselessAssignment: Useless assignment to variable - b.
b = Player.create(name: 'Brenda', email: 'brenda@correo.com', password: '12345', is_admin: true)
^
db/seeds.rb:38:45: C: [Correctable] Style/StringConcatenation: Prefer string interpolation to string concatenation.
  Player.create(name: "Player #{i}", email: 'lucio' + i.to_s + '@correo.com', password: '12345', is_admin: false)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/forecast_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require_relative '../app/models/init'
^
spec/forecast_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [37/25]
describe 'Forecast' do ...
^^^^^^^^^^^^^^^^^^^^^^
spec/forecast_spec.rb:4:3: C: Metrics/BlockLength: Block has too many lines. [35/25]
  describe '#points' do ...
  ^^^^^^^^^^^^^^^^^^^^^
spec/forecast_spec.rb:6:5: C: Naming/VariableNumber: Use normalcase for variable numbers.
    tournament_1 = Tournament.new(name: 'Liga Argentina')
    ^^^^^^^^^^^^
spec/forecast_spec.rb:9:5: C: Naming/VariableNumber: Use normalcase for variable numbers.
    matchday_1 = MatchDay.new(description: 'Fecha 1', tournament: tournament_1)
    ^^^^^^^^^^
spec/forecast_spec.rb:12:5: C: Naming/VariableNumber: Use normalcase for variable numbers.
    team_1 = Team.new(name: 'Boca')
    ^^^^^^
spec/forecast_spec.rb:13:5: C: Naming/VariableNumber: Use normalcase for variable numbers.
    team_2 = Team.new(name: 'River')
    ^^^^^^
spec/forecast_spec.rb:16:5: C: Naming/VariableNumber: Use normalcase for variable numbers.
    match_1 =  Match.new(match_type: 'LEAGUE', match_day: matchday_1, home: team_1, away: team_2)
    ^^^^^^^
spec/forecast_spec.rb:19:5: C: Naming/VariableNumber: Use normalcase for variable numbers.
    forecast_1 = Forecast.new(result: 'HOME', home_goals: 2, away_goals: 1, match: match_1, tournament: tournament_1)
    ^^^^^^^^^^
spec/player_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require_relative '../app/models/init'
^
spec/player_spec.rb:4:121: C: Layout/LineLength: Line is too long. [126/120]
#     Si se intenta registrar un usuario ya existente - retornar el error correspondiente y hacer un rollback de la operación.
                                                                                                                        ^^^^^^
spec/player_spec.rb:6:121: C: Layout/LineLength: Line is too long. [135/120]
#     Si se intenta registrar un usuario con nombres inválidos - retornar el error correspondiente y hacer un rollback de la operación.
                                                                                                                        ^^^^^^^^^^^^^^^
spec/player_spec.rb:8:121: C: Layout/LineLength: Line is too long. [148/120]
#     Si se intenta registrar un usuario con formato inválido de contraseña - retornar el error correspondiente y hacer un rollback de la operación.
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/player_spec.rb:15:7: W: Lint/UselessAssignment: Useless assignment to variable - user_repeated.
      user_repeated = Player.new(name: 'Lucio', email: 'lucio@correo.com', password: '12345', is_admin: true)
      ^^^^^^^^^^^^^
spec/player_spec.rb:22:7: W: Lint/UselessAssignment: Useless assignment to variable - user_invalid_name.
      user_invalid_name = Player.new(name: 'L', email: 'lucio@correo.com', password: '12345', is_admin: true)
      ^^^^^^^^^^^^^^^^^
spec/player_spec.rb:29:7: W: Lint/UselessAssignment: Useless assignment to variable - user_invalid_password.
      user_invalid_password = Player.new(name: 'Lucio', email: 'lucio@correo.com', password: 'short',
      ^^^^^^^^^^^^^^^^^^^^^
spec/spec_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'sinatra/base'
^

46 files inspected, 219 offenses detected, 71 offenses autocorrectable
